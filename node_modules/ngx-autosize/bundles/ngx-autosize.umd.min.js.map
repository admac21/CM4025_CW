{
  "version": 3,
  "file": "ngx-autosize.umd.min.js",
  "sources": [
    "ng://ngx-autosize/out/src/autosize.directive.ts",
    "ng://ngx-autosize/out/public_api.ts"
  ],
  "sourcesContent": [
    "import { ElementRef, HostListener, Directive} from '@angular/core';\n\nconst MAX_LOOKUP_RETRIES = 3;\n@Directive({\n    selector: '[autosize]'\n})\n\nexport class Autosize {\n @HostListener('input',['$event.target'])\n  onInput(textArea: HTMLTextAreaElement): void {\n    this.adjust();\n  }\n  private retries: number = 0;\n  private textAreaEl: any;\n  constructor(public element: ElementRef) {\n     if (this.element.nativeElement.tagName !== 'TEXTAREA') {\n       this._findNestedTextArea();\n\n     } else {\n       this.textAreaEl = this.element.nativeElement;\n     }\n  }\n  _findNestedTextArea() {\n     this.textAreaEl = this.element.nativeElement.getElementsByTagName('TEXTAREA')[0];\n     if (!this.textAreaEl) {\n       if (this.retries >= MAX_LOOKUP_RETRIES) {\n         console.warn('angular2-autosize: textarea not found');\n\n       } else {\n         this.retries++;\n         setTimeout(() => {\n           this._findNestedTextArea();\n         }, 100);\n       }\n     }\n  }\n  ngAfterContentChecked(): void{\n    this.adjust();\n  }\n  adjust(): void {\n    if (this.textAreaEl) {\n      this.textAreaEl.style.overflow = 'hidden';\n      this.textAreaEl.style.height = 'auto';\n      this.textAreaEl.style.height = this.textAreaEl.scrollHeight + \"px\";\n    }\n  }\n}\n",
    "import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {Autosize} from './src/autosize.directive';\nexport * from './src/autosize.directive';\n\n@NgModule({\n    declarations: [\n        Autosize\n    ],\n    exports: [\n        Autosize\n    ]\n})\nexport class AutosizeModule {\n    static forRoot(): ModuleWithProviders {\n        return {ngModule: AutosizeModule, providers: []};\n    }\n}\n"
  ],
  "names": [
    "Autosize",
    "element",
    "this",
    "retries",
    "nativeElement",
    "tagName",
    "_findNestedTextArea",
    "textAreaEl",
    "prototype",
    "onInput",
    "textArea",
    "adjust",
    "_this",
    "getElementsByTagName",
    "console",
    "warn",
    "setTimeout",
    "ngAfterContentChecked",
    "style",
    "overflow",
    "height",
    "scrollHeight",
    "type",
    "Directive",
    "args",
    "selector",
    "ElementRef",
    "HostListener",
    "AutosizeModule",
    "forRoot",
    "ngModule",
    "providers",
    "NgModule",
    "declarations",
    "exports"
  ],
  "mappings": "sQAAA,IAOAA,EAAA,WAOE,SAAFA,EAAqBC,GAAAC,KAArBD,QAAqBA,EAFrBC,KAAAC,QAA4B,EAGoB,aAAvCD,KAAKD,QAAQG,cAAcC,QAC7BH,KAAKI,sBAGLJ,KAAKK,WAAaL,KAAKD,QAAQG,qBAVpCJ,EAAFQ,UAAAC,QAAE,SAAQC,GACNR,KAAKS,UAYPX,EAAFQ,UAAAF,oBAAE,WAAA,IAAFM,EAAAV,KACKA,KAAKK,WAAaL,KAAKD,QAAQG,cAAcS,qBAAqB,YAAY,GACzEX,KAAKK,aAtBY,GAuBhBL,KAAKC,QACPW,QAAQC,KAAK,0CAGbb,KAAKC,UACLa,WAAW,WACTJ,EAAKN,uBACJ,QAIVN,EAAFQ,UAAAS,sBAAE,WACEf,KAAKS,UAEPX,EAAFQ,UAAAG,OAAE,WACMT,KAAKK,aACPL,KAAKK,WAAWW,MAAMC,SAAW,SACjCjB,KAAKK,WAAWW,MAAME,OAAS,OAC/BlB,KAAKK,WAAWW,MAAME,OAASlB,KAAKK,WAAWc,aAAe,SApCpE,iBAJA,CAAAC,KAACC,EAAAA,UAADC,KAAA,CAAW,CACPC,SAAU,oDAJd,CAAAH,KAASI,EAAAA,gCAQTjB,QAAA,CAAA,CAAAa,KAAEK,EAAAA,aAAFH,KAAA,CAAe,QAAQ,CAAC,qBCRxB,IAAAI,EAAA,WAAA,SAAAA,YAaWA,EAAXC,QAAI,WACI,MAAO,CAACC,SAAUF,EAAgBG,UAAW,OAdrD,iBAIA,CAAAT,KAACU,EAAAA,SAADR,KAAA,CAAU,CACNS,aAAc,CACVjC,GAEJkC,QAAS,CACLlC"
}
