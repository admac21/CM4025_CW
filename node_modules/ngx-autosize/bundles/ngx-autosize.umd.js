(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :
	typeof define === 'function' && define.amd ? define('ngx-autosize', ['exports', '@angular/core'], factory) :
	(factory((global['ngx-autosize'] = {}),global.ng.core));
}(this, (function (exports,core) { 'use strict';

var MAX_LOOKUP_RETRIES = 3;
var Autosize = (function () {
    function Autosize(element) {
        this.element = element;
        this.retries = 0;
        if (this.element.nativeElement.tagName !== 'TEXTAREA') {
            this._findNestedTextArea();
        }
        else {
            this.textAreaEl = this.element.nativeElement;
        }
    }
    Autosize.prototype.onInput = function (textArea) {
        this.adjust();
    };
    Autosize.prototype._findNestedTextArea = function () {
        var _this = this;
        this.textAreaEl = this.element.nativeElement.getElementsByTagName('TEXTAREA')[0];
        if (!this.textAreaEl) {
            if (this.retries >= MAX_LOOKUP_RETRIES) {
                console.warn('angular2-autosize: textarea not found');
            }
            else {
                this.retries++;
                setTimeout(function () {
                    _this._findNestedTextArea();
                }, 100);
            }
        }
    };
    Autosize.prototype.ngAfterContentChecked = function () {
        this.adjust();
    };
    Autosize.prototype.adjust = function () {
        if (this.textAreaEl) {
            this.textAreaEl.style.overflow = 'hidden';
            this.textAreaEl.style.height = 'auto';
            this.textAreaEl.style.height = this.textAreaEl.scrollHeight + "px";
        }
    };
    return Autosize;
}());
Autosize.decorators = [
    { type: core.Directive, args: [{
                selector: '[autosize]'
            },] },
];
Autosize.ctorParameters = function () { return [
    { type: core.ElementRef, },
]; };
Autosize.propDecorators = {
    "onInput": [{ type: core.HostListener, args: ['input', ['$event.target'],] },],
};
var AutosizeModule = (function () {
    function AutosizeModule() {
    }
    AutosizeModule.forRoot = function () {
        return { ngModule: AutosizeModule, providers: [] };
    };
    return AutosizeModule;
}());
AutosizeModule.decorators = [
    { type: core.NgModule, args: [{
                declarations: [
                    Autosize
                ],
                exports: [
                    Autosize
                ]
            },] },
];

exports.AutosizeModule = AutosizeModule;
exports.Autosize = Autosize;

Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=ngx-autosize.umd.js.map
